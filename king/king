# -*- coding: utf-8 -*-
"""
Created on Wed Oct 27 23:39:28 2021

@author: user
"""

from selenium import webdriver
from selenium.webdriver.support.ui import Select
import time
from bs4 import BeautifulSoup
import pandas as pd
import re
import mysql.connector
import json


def get_driver():
    url = 'http://www.kingbus.com.tw/ticketRoute.php'
    driver = webdriver.Chrome()
    driver.get(url)
    time.sleep(3)
    return driver, url

#driver, url = get_driver()


def select_route(driver, a, o, d):
    select_area = Select(driver.find_element_by_id('area'))
    select_area.select_by_visible_text(a)
    select_ori = Select(driver.find_element_by_id('origin'))
    select_ori.select_by_visible_text(o)
    select_dest = Select(driver.find_element_by_id('destination'))
    select_dest.select_by_visible_text(d)
    click_submit = driver.find_element_by_name('submit')
    click_submit.click()
    time.sleep(3)

#select_route('台北', '臺北轉運站', '朝馬轉運站')


def read_source(driver):
    soup = BeautifulSoup(driver.page_source, 'lxml')
    uls = soup.find('ul', 'routeData')
    k = []
    for u in uls.find_all('a'):
        k.append(u.text)
    K = pd.DataFrame(k)
    K[0] = K[0].apply(lambda x: re.sub(r'[\n\t ]', '', x).replace('【', '_【').replace('　[', '_['))
    K2 = K[0].str.split('_', expand = True)
    K2 = K2.drop(0, axis = 1)
    K2.columns = ['route', 'description']
    return K2

#K2 = read_source(driver)


def main(a, o, d):
    driver, url = get_driver()
    select_route(driver, a, o, d)
    K2 = read_source(driver)
    return K2


if __name__ == '__main__':
    K2 = main('台北', '臺北轉運站', '朝馬轉運站')
    

# 將路線查詢結果輸出成CSV
K2.to_csv('C:\\Users\\user\\Desktop\\K2.csv', encoding = 'utf-8')


###############################################################################

# 將路線查詢結果寫入MySQL
def connect_gcp(db_name):
    with open('C:\\Users\\user\\Desktop\\user_info.json') as f:
        user_info = json.load(f)
    gcp_db = mysql.connector.connect(
            host = user_info['host'],
            port = user_info['port'],
            user = user_info['user'],
            password = user_info['password'],
            database = db_name,
            charset = user_info['charset'])
    gcp_cursor = gcp_db.cursor()
    return gcp_db, gcp_cursor

#gcp_db, gcp_cursor = connect_gcp()
    

def sql_replace_into(gcp_db, gcp_cursor, data):
    sql_replace_code = """
    REPLACE INTO Test.kingbus (route, description)
    VALUES (%s, %s)"""
    input_data = [tuple(x) for x in data.to_records(index = False)]
    gcp_cursor.executemany(sql_replace_code, input_data)
    gcp_db.commit()
    gcp_cursor.close()
    gcp_db.close()
    print('data insert completed')

#sql_replace_into(gcp_db, gcp_cursor, K2)


###############################################################################

# 統計route欄位中有出現埔里的筆數
def countN(point):
    p = len(K2[K2['route'].str.contains(point)])
    print(f'經 {point} 路線：共 {p} 筆')

#countN('埔里')

